-- single_db_mode_expected
-- CREATE LOGIN AND ADD IT TO db_accessadmin
    -- Only members of db_owner should be able to add/drop members to db_accessadmin

-- db_accessadmin should be able to do the following
    -- CREATE USER in database
    -- DROP ANY USER in database (except dbo)
    -- ALTER default_schema for any user in database
    -- RENAME user execpt for members of db_owner
    -- CREATE SCHEMA for self or other users in database

-- tsql
-- bbf dump does not dump password so reset the password
ALTER LOGIN babel_5136_l1 WITH PASSWORD = '12345678'
GO
-- CREATE A USER WITH db_accessadmin privilege in DATABASE babel_5136
USE master
GO
CREATE LOGIN babel_5136_db_accessadmin_l1 WITH PASSWORD = '12345678'
GO
CREATE USER babel_5136_user_master FOR LOGIN babel_5136_db_accessadmin_l1
GO
USE babel_5136
GO
CREATE USER babel_5136_db_accessadmin_user FOR LOGIN babel_5136_db_accessadmin_l1
GO
-- ADD DROP MEMBERS TO db_accessadmin USING dbo
sp_addrolemember 'db_accessadmin', 'babel_5136_db_accessadmin_user'
GO
SELECT IS_ROLEMEMBER('db_accessadmin', 'babel_5136_db_accessadmin_user')
GO
sp_droprolemember 'db_accessadmin', 'babel_5136_db_accessadmin_user'
GO
SELECT IS_ROLEMEMBER('db_accessadmin', 'babel_5136_db_accessadmin_user')
GO
ALTER ROLE db_accessadmin ADD MEMBER babel_5136_db_accessadmin_user
GO
-- Cannot add login as member of db_accessadmin
ALTER ROLE db_accessadmin ADD MEMBER babel_5136_l1
GO
-- Cannot add fixed roles ass member of db_accessadmin
ALTER ROLE db_accessadmin ADD MEMBER syadmin
GO
ALTER ROLE db_accessadmin ADD MEMBER dbo
GO
ALTER ROLE db_accessadmin ADD MEMBER db_owner
GO
ALTER ROLE db_accessadmin ADD MEMBER db_accessadmin
GO
ALTER ROLE db_accessadmin DROP MEMBER syadmin
GO
ALTER ROLE db_accessadmin DROP MEMBER dbo
GO
ALTER ROLE db_accessadmin DROP MEMBER db_owner
GO
ALTER ROLE db_accessadmin DROP MEMBER db_accessadmin
GO

-- MEMBERS OF db_accessadmin WILL ALWAYS HAVE CONNECT PRIVILEGES
REVOKE CONNECT FROM babel_5136_db_accessadmin_user
GO

-- IS_ROLEMEMBER & IS_MEMBER should show db_accessadmin as member of dbo but not of db_owner
SELECT IS_ROLEMEMBER('db_accessadmin')
GO
SELECT IS_ROLEMEMBER('db_accessadmin', 'dbo')
GO
SELECT IS_ROLEMEMBER('db_accessadmin', 'db_owner')
GO
SELECT IS_ROLEMEMBER('babel_5136_r1', 'dbo')
GO
SELECT IS_MEMBER('db_accessadmin')
GO
SELECT IS_MEMBER('dbo')
GO
SELECT IS_MEMBER('db_owner')
GO
SELECT IS_MEMBER('babel_5136_r1')
GO
-- terminate-tsql-conn

-- Only db_owner members should be able to do this
-- tsql user=babel_5136_l1 password=12345678 database=babel_5136
ALTER ROLE db_accessadmin ADD MEMBER babel_5136_db_accessadmin_user
GO
-- terminate-tsql-conn user=babel_5136_l1 password=12345678 database=babel_5136


-- Check all allowed operations
-- tsql user=babel_5136_db_accessadmin_l1 password=12345678
USE babel_5136
GO

SELECT current_user
GO

-- should be a member of db_accessadmin in babel_5136 database
SELECT IS_ROLEMEMBER('db_accessadmin')
GO

-- CREATE DROP A NEW USER
CREATE USER babel_5136_u2 FOR LOGIN babel_5136_l2
GO
DROP USER babel_5136_u2
GO

-- DROP & RECREATE EXISTING USER
DROP USER babel_5136_u1
GO
CREATE USER babel_5136_u1 FOR LOGIN babel_5136_l1
GO
-- terminate-tsql-conn user=babel_5136_db_accessadmin_l1 password=12345678

-- tsql database=babel_5136
SELECT current_user
GO
ALTER ROLE babel_5136_r1 ADD MEMBER babel_5136_u1
GO
-- terminate-tsql-conn database=babel_5136

-- tsql user=babel_5136_db_accessadmin_l1 password=12345678 database=babel_5136
-- ALTER EXISTING USER and THEN DROP IT
ALTER USER babel_5136_u1 WITH DEFAULT_SCHEMA = dbo
GO
ALTER USER babel_5136_u1 WITH NAME = babel_5136_u1_new_name
GO
-- NOT SUPPORTED CURRENTLY IN BABELFISH
ALTER USER babel_5136_u1_new_name WITH PASSWORD = 'shouldfail'
GO
DROP USER babel_5136_u1_new_name
GO
CREATE USER babel_5136_u1_new_name FOR LOGIN babel_5136_l1
GO
-- ALTER NEW USER and THEN DROP IT
CREATE USER babel_5136_u2 FOR LOGIN babel_5136_l2
GO
ALTER USER babel_5136_u2 WITH NAME = babel_5136_u1
GO

-- CREATE SCHEMA should be allowed db_accessadmin
CREATE SCHEMA s1
GO
CREATE SCHEMA s2 AUTHORIZATION dbo
GO
CREATE SCHEMA s3 AUTHORIZATION babel_5136_u1
GO

-- Should be able to do GRANT/REVOKE on schema that it owns
GRANT SELECT, INSERT, EXECUTE ON SCHEMA::s1 TO babel_5136_u1
GO
GRANT SELECT, INSERT, EXECUTE ON SCHEMA::s2 TO babel_5136_u1
GO
GRANT SELECT, INSERT, EXECUTE ON SCHEMA::s3 TO babel_5136_u1
GO
REVOKE SELECT, INSERT, EXECUTE ON SCHEMA::s1 TO babel_5136_u1
GO
REVOKE SELECT, INSERT, EXECUTE ON SCHEMA::s2 TO babel_5136_u1
GO
REVOKE SELECT, INSERT, EXECUTE ON SCHEMA::s3 TO babel_5136_u1
GO
-- Should only be able to drop schema that it owns
DROP SCHEMA s1
GO
DROP SCHEMA s2
GO
DROP SCHEMA s3
GO

-- Should be restricted
DROP USER dbo
GO
DROP ROLE db_owner
GO
DROP ROLE db_accessadmin
GO
DROP USER guest
GO

-- db_accessadmin can not add/drop members to any other role
ALTER ROLE db_accessadmin ADD MEMBER babel_5136_u1
GO
ALTER ROLE db_owner ADD MEMBER babel_5136_u1
GO
ALTER ROLE babel_5136_r1 ADD MEMBER babel_5136_u1
GO
ALTER ROLE babel_5136_r1 DROP MEMBER babel_5136_u1
GO
ALTER ROLE db_accessadmin DROP MEMBER 'babel_5136_db_accessadmin_user'
GO
sp_addrolemember 'db_accessadmin', 'babel_5136_u1'
GO
sp_droprolemember 'db_accessadmin', 'babel_5136_db_accessadmin_user'
GO
sp_addrolemember 'babel_5136_r1', 'babel_5136_u1'
GO
sp_droprolemember 'babel_5136_r1', 'babel_5136_u1'
GO
sp_droprolemember 'db_accessadmin', 'babel_5136_db_accessadmin_user'
GO

-- should not be able to alter users login mapping or rename members of db_owner
ALTER USER babel_5136_u1_new_name WITH LOGIN = babel_5136_l3
GO
ALTER USER dbo WITH LOGIN = babel_5136_l3
GO
ALTER USER dbo WITH NAME = dbo_should_not_be_renamed
GO
ALTER USER dbo WITH DEFAULT_SCHEMA = dbo
GO
GRANT CONNECT TO babel_5136_u1_new_name
GO
GRANT CONNECT TO dbo
GO
REVOKE CONNECT FROM babel_5136_u1_new_name
GO
REVOKE CONNECT FROM dbo
GO

-- DMLs or EXECUTING FUNCTIONS SHOULD ALSO BE NOT ALLOWED
EXEC babel_5136_p1
GO
SELECT * FROM babel_5136_t1
GO
SELECT babel_5136_f1()
GO

-- NO OTHER DDLs SHOULD BE ALLOWED
CREATE TABLE babel_5136_t2 (id INT)
GO
CREATE PROCEDURE babel_5136_p2 AS SELECT 1
GO
CREATE FUNCTION babel_5136_f2() RETURNS INT AS BEGIN RETURN 1 END
GO

-- In master database the current login should not have db_accessadmin privilege
-- Since db_accessadmin is database level role
USE master
GO

SELECT current_user
GO

-- should not be a member of db_accessadmin in master database
SELECT IS_ROLEMEMBER('db_accessadmin')
GO

-- Should not be able to do any activity in master database
CREATE USER babel_5136_u2 FOR LOGIN babel_5136_l2
GO
DROP USER babel_5136_u1
GO
DROP ROLE babel_5136_r1
GO
CREATE ROLE babel_5136_r2
GO
CREATE TABLE babel_5136_t1 (id INT)
GO
CREATE PROCEDURE babel_5136_p2 AS SELECT 1
GO
CREATE FUNCTION babel_5136_f2() RETURNS INT AS BEGIN RETURN 1 END
GO
CREATE SCHEMA babel_5136_s1
GO
CREATE SCHEMA babel_5136_s1 AUTHORIZATION babel_5136_u1
GO
-- Should not be able to drop a database
DROP DATABASE babel_5136
GO
-- terminate-tsql-conn user=babel_5136_db_accessadmin_l1 password=12345678 database=babel_5136

-- tsql
DROP DATABASE babel_5136
GO
-- terminate-tsql-conn

-- tsql user=babel_5136_db_accessadmin_l1 password=12345678
-- Should not be able to create a database
CREATE DATABASE babel_5136
GO
-- terminate-tsql-conn user=babel_5136_db_accessadmin_l1 password=12345678
